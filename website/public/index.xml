<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Home on Bullish Design</title>
        <link>http://localhost:1313/</link>
        <description>Recent content in Home on Bullish Design</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" /><item>
        <title></title>
        <link>http://localhost:1313/pages/projects/obsidian_manager/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/obsidian_manager/notes/</guid>
        <description>&lt;h1 id=&#34;obsidian_manager&#34;&gt;Obsidian_Manager
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;log&#34;&gt;Log:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title></title>
        <link>http://localhost:1313/pages/projects/obsidian_manager/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/obsidian_manager/tasks/</guid>
        <description>&lt;h1 id=&#34;obsidian_manager_tasks&#34;&gt;Obsidian_Manager_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title></title>
        <link>http://localhost:1313/pages/projects/python_parser/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/python_parser/notes/</guid>
        <description>&lt;h1 id=&#34;python_parser&#34;&gt;Python_Parser
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;learnings&#34;&gt;Learnings:
&lt;/h1&gt;&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;log&#34;&gt;Log:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title></title>
        <link>http://localhost:1313/pages/projects/python_parser/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/python_parser/tasks/</guid>
        <description>&lt;h1 id=&#34;python_parser_tasks&#34;&gt;Python_Parser_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>About</title>
        <link>http://localhost:1313/pages/about/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/about/</guid>
        <description>&lt;h1 id=&#34;about&#34;&gt;About
&lt;/h1&gt;&lt;p&gt;This is the About Page.&lt;/p&gt;
&lt;p&gt;Test change?&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/projects/&#34; &gt;Projects&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Data Analysis</title>
        <link>http://localhost:1313/pages/data-analysis/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/data-analysis/</guid>
        <description>&lt;p&gt;Test?&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Devenv.sh</title>
        <link>http://localhost:1313/pages/projects/nixos_setup/devenv.sh/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/nixos_setup/devenv.sh/</guid>
        <description>&lt;h1 id=&#34;about&#34;&gt;About
&lt;/h1&gt;&lt;p&gt;Using Devenv.sh to set up python development environments.&lt;/p&gt;
&lt;h2 id=&#34;questions&#34;&gt;Questions:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;How to set up different starting templates from the &amp;ldquo;devenv init&amp;rdquo; command?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;plan&#34;&gt;Plan:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Create devenv fork
&lt;ul&gt;
&lt;li&gt;Initialize locally so it&amp;rsquo;s a local project (with obsidian notes for gameplan)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Update template in that fork&lt;/li&gt;
&lt;li&gt;Create shell script for initialization&lt;/li&gt;
&lt;li&gt;Keep track of further updates in that fork.&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Kitty</title>
        <link>http://localhost:1313/pages/projects/nixos_setup/kitty/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/nixos_setup/kitty/</guid>
        <description>&lt;h1 id=&#34;about&#34;&gt;About
&lt;/h1&gt;&lt;p&gt;A terminal, supposed to be pretty good?&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Life</title>
        <link>http://localhost:1313/pages/life/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/life/</guid>
        <description>&lt;h1 id=&#34;projectshahahugoshortcode3s0hbhb&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/projects/&#34; &gt;Projects&lt;/a&gt;
&lt;/h1&gt;&lt;p&gt;Projects list&lt;/p&gt;
&lt;h1 id=&#34;systemshahahugoshortcode3s1hbhb&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/projects/systems/&#34; &gt;Systems&lt;/a&gt;
&lt;/h1&gt;&lt;p&gt;Use &amp;ldquo;systems over goals&amp;rdquo; philosophy&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Neovi</title>
        <link>http://localhost:1313/pages/projects/nixos_setup/neovim/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/nixos_setup/neovim/</guid>
        <description>&lt;p&gt;#Programming , #IDE, #PDE&lt;/p&gt;
&lt;h1 id=&#34;about&#34;&gt;About
&lt;/h1&gt;&lt;p&gt;A text editor. Modular enough to turn into a full IDE.&lt;/p&gt;
&lt;h1 id=&#34;pythonhahahugoshortcode28s0hbhb-ide-setup&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/projects/nixos_setup/python/&#34; &gt;Python&lt;/a&gt; IDE Setup
&lt;/h1&gt;&lt;p&gt;Reference Links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.playfulpython.com/configuring-neovim-as-a-python-ide/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.playfulpython.com/configuring-neovim-as-a-python-ide/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;notes&#34;&gt;Notes:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Vim tmux navigator: &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=qyV_hOtMdwg&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=qyV_hOtMdwg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tutor&#34;&gt;Tutor
&lt;/h1&gt;&lt;h2 id=&#34;questions&#34;&gt;Questions:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;How to unselect after &amp;ldquo;substitute&amp;rdquo;?&lt;/li&gt;
&lt;li&gt;Need to figure out what &amp;ldquo;Text Objects&amp;rdquo; are?&lt;/li&gt;
&lt;li&gt;How to group multiple lines in nix for ease of reading multi-line settings?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;notes-1&#34;&gt;Notes:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Acronyms for all &amp;ldquo;Normal&amp;rdquo; key leaders?
&lt;ul&gt;
&lt;li&gt;s = Substitute&lt;/li&gt;
&lt;li&gt;d = Delete&lt;/li&gt;
&lt;li&gt;/ = search&lt;/li&gt;
&lt;li&gt;g = go (current)&lt;/li&gt;
&lt;li&gt;G = go to line&lt;/li&gt;
&lt;li&gt;c = change&lt;/li&gt;
&lt;li&gt;r = replace&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;keymaps&#34;&gt;Keymaps:
&lt;/h1&gt;&lt;h2 id=&#34;thoughts&#34;&gt;Thoughts:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;A sidebar that serves as an access point for various tasks, toggle with space-tab
&lt;ul&gt;
&lt;li&gt;file explorer (e)&lt;/li&gt;
&lt;li&gt;undo tree (u)&lt;/li&gt;
&lt;li&gt;buffer/tab navigation shortcuts (b)&lt;/li&gt;
&lt;li&gt;script list (s)&lt;/li&gt;
&lt;li&gt;Obsidian (n)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Other leader groups:
&lt;ul&gt;
&lt;li&gt;Terminal popup (t - terminal)&lt;/li&gt;
&lt;li&gt;Search/find (s - search)&lt;/li&gt;
&lt;li&gt;Telescope (f - find)&lt;/li&gt;
&lt;li&gt;git (g - git)&lt;/li&gt;
&lt;li&gt;code (c - code)
&lt;ul&gt;
&lt;li&gt;debug&lt;/li&gt;
&lt;li&gt;format&lt;/li&gt;
&lt;li&gt;etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;Orrr&amp;hellip;&amp;hellip; Just use space+tab as a leader for all &amp;ldquo;sidebar&amp;rdquo; related things, without calling the sidebar first?&lt;/strong&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;plan&#34;&gt;Plan:
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Leverage mini.nvim as much as possible.
&lt;ol&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Replace Which-key with mini.clue
&lt;ol&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Rebuild Keymaps
&lt;ol&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Tab (navigation)
&lt;ol&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Change Tmux Layout&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Change Tmux Pane&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Switch buffer&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; new buffer&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; File (mini.files)&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Telescope&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Search
&lt;ol&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; In buffer&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; In active buffers&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; In recent buffers&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; In project&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; git&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; code&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Obsidian&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Script drawer
&lt;ol&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Change per project?&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Tie into direnv?&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Replace NeoTree with mini.files
&lt;ol&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create keymap&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Clean up mini folder structure and code formatting
&lt;ol&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Consistent format, not the &amp;ldquo;empty = null&amp;rdquo; bullshit&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Set up Obsidian
&lt;ol&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Set up connection to main &amp;ldquo;Notes&amp;rdquo; folder&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Figure out symlinks to project folders&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Set up Tmux navigation (with TmuxP?)
&lt;ol&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; New pane&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Switch panes
&lt;ol&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; From within Neovim, too&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Move pane?&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Resize pane?&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Figure out clipboard
&lt;ol&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &amp;ldquo;No clipboard provider&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;plugins&#34;&gt;Plugins:
&lt;/h1&gt;&lt;h2 id=&#34;which-key&#34;&gt;Which-Key:
&lt;/h2&gt;&lt;h3 id=&#34;what-is-it&#34;&gt;What is it?
&lt;/h3&gt;&lt;p&gt;An Nvim plugin for managing keymaps.&lt;/p&gt;
&lt;h3 id=&#34;resources&#34;&gt;Resources:
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/folke/which-key.nvim&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/folke/which-key.nvim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Potential Tmux version: &lt;a class=&#34;link&#34; href=&#34;https://github.com/alexwforsythe/tmux-which-key&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/alexwforsythe/tmux-which-key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;questions-1&#34;&gt;Questions:
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;How to integrate with tmux? Possible?
&lt;ul&gt;
&lt;li&gt;investigate: &lt;a class=&#34;link&#34; href=&#34;https://github.com/alexwforsythe/tmux-which-key&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/alexwforsythe/tmux-which-key&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;todo&#34;&gt;Todo:
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Dig up all existing nvim shortcuts, consolidate into which-key&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Nix</title>
        <link>http://localhost:1313/pages/projects/nixos_setup/nix/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/nixos_setup/nix/</guid>
        <description>&lt;h1 id=&#34;about&#34;&gt;About
&lt;/h1&gt;&lt;p&gt;Nix is the language, &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/projects/nixos_setup/nixos/&#34; &gt;NixOS&lt;/a&gt; is the operating system. The operating system uses the language for configuration.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>NixOS</title>
        <link>http://localhost:1313/pages/projects/nixos_setup/nixos/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/nixos_setup/nixos/</guid>
        <description>&lt;p&gt;#Topic, #Programming&lt;/p&gt;
&lt;h1 id=&#34;setup&#34;&gt;Setup
&lt;/h1&gt;&lt;h1 id=&#34;questions&#34;&gt;Questions
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>NixOS Setup</title>
        <link>http://localhost:1313/pages/projects/nixos_setup/nixos-setup/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/nixos_setup/nixos-setup/</guid>
        <description>&lt;h1 id=&#34;nixoshahahugoshortcode31s0hbhb&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/projects/nixos_setup/nixos/&#34; &gt;NixOS&lt;/a&gt;
&lt;/h1&gt;&lt;p&gt;Notes and config files for a fresh NixOS install&lt;/p&gt;
&lt;h1 id=&#34;notes&#34;&gt;Notes
&lt;/h1&gt;&lt;h2 id=&#34;overall-goal&#34;&gt;Overall goal:
&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;- Github based nixos install files suitable for both a framework and wsl2 installation.
- Be able to quickly get up to speed on any new system and immediately fall into the same working environment. 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ongoing-questions&#34;&gt;Ongoing Questions:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;How to swap keys? Tried:
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://discourse.nixos.org/t/how-to-remap-caps-lock-to-ctrl-while-keeping-ctrl-as-ctrl/13911&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://discourse.nixos.org/t/how-to-remap-caps-lock-to-ctrl-while-keeping-ctrl-as-ctrl/13911&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://discourse.nixos.org/t/configuring-caps-lock-as-control-on-console/9356&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://discourse.nixos.org/t/configuring-caps-lock-as-control-on-console/9356&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;look up: interception-tools
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://search.nixos.org/options?channel=unstable&amp;amp;show=services.interception-tools.enable&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=interception-tools&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://search.nixos.org/options?channel=unstable&amp;show=services.interception-tools.enable&amp;from=0&amp;size=50&amp;sort=relevance&amp;type=packages&amp;query=interception-tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How best to create global scripts?&lt;/li&gt;
&lt;li&gt;How to setup Python Environment?
&lt;ul&gt;
&lt;li&gt;Attempting with Devenv&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;How to update NixOS and assorted home-manager installed packages?
&lt;ul&gt;
&lt;li&gt;See below (how to update the system)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;how-to-update-the-system&#34;&gt;How to Update the System:
&lt;/h2&gt;&lt;p&gt;Per (&lt;a class=&#34;link&#34; href=&#34;https://nixos-and-flakes.thiscute.world/nixos-with-flakes/update-the-system%29&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://nixos-and-flakes.thiscute.world/nixos-with-flakes/update-the-system)&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to dotfiles directory&lt;/li&gt;
&lt;li&gt;Run &amp;ldquo;nix flake update&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;how-to-modify&#34;&gt;How to Modify:
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Base level system config is the flake.nix file&lt;/li&gt;
&lt;li&gt;Main changes from the .home file, which is imported into the flake.nix&lt;/li&gt;
&lt;li&gt;(Real base level config is the configuration.nix file? - But just for true base level files)&lt;/li&gt;
&lt;li&gt;When modifying the dotfiles directory structure, need to push to github first?
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://discourse.nixos.org/t/nix-flakes-nix-store-source-no-such-file-or-directory/17836/8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://discourse.nixos.org/t/nix-flakes-nix-store-source-no-such-file-or-directory/17836/8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Whyyyy?&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;steps&#34;&gt;Steps:
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;NixOS install&lt;/li&gt;
&lt;li&gt;Home Manager&lt;/li&gt;
&lt;li&gt;Flakes&lt;/li&gt;
&lt;li&gt;Github connection&lt;/li&gt;
&lt;li&gt;Kitty&lt;/li&gt;
&lt;li&gt;Tmux&lt;/li&gt;
&lt;li&gt;Neovim&lt;/li&gt;
&lt;li&gt;i3 (?)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;nixos-install&#34;&gt;NixOS install:
&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Resources:
	Used Vimjoyers intro video: https://www.youtube.com/watch?v=a67Sv4Mbxmc
		- later failed, couldn&#39;t figure out why
	https://nixos-and-flakes.thiscute.world/nixos-with-flakes/start-using-home-manager
	https://librephoenix.com/2023-10-21-intro-flake-config-setup-for-new-nixos-users.html
	https://librephoenix.com/2024-03-14-managing-your-nixos-config-with-git
	https://codeberg.org/justgivemeaname/.dotfiles
	    - Good organization split -&amp;gt; packages + scripts separate
    https://github.com/anotherhadi/nixy/tree/main
        - Great examples for importing packages
    
Questions:
	How to figure out how to install programs?
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;home-manager&#34;&gt;Home Manager:
&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Resources:

Questions:
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;flakes&#34;&gt;Flakes:
&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Resources:
	- Keep in mind Modularization:
		- https://nixos-and-flakes.thiscute.world/nixos-with-flakes/modularize-the-configuration
Questions:
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;kittyhahahugoshortcode31s1hbhb&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/projects/nixos_setup/kitty/&#34; &gt;Kitty&lt;/a&gt;:
&lt;/h2&gt;&lt;p&gt;A terminal program. GPU does the heavy lifting, so it&amp;rsquo;s supposed to be nice and snappy.
Resources:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Questions:
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;tmuxhahahugoshortcode31s2hbhb&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/projects/nixos_setup/tmux/&#34; &gt;Tmux&lt;/a&gt;:
&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Resources:
	https://github.com/novoid/nixos-config
Questions:

ToDo:
	1. ~~Configure via Nix Flake~~ 
		1. Trying &amp;quot;Tmuxp&amp;quot; first for configuration and session management
			1. Where to store the tmuxp template files?
	2. Need a file explorer/manager
	3. Figure out expanding/collapsing window panes
	4. Keybindings for navigating between panes (preferably vim navigation)
	5. Have default &amp;quot;work&amp;quot; and &amp;quot;play&amp;quot; templates
	7. Browser integration?
	8. 
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;neovimhahahugoshortcode31s3hbhb&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/projects/nixos_setup/neovim/&#34; &gt;Neovim&lt;/a&gt;:
&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Resources:
	https://gist.github.com/nat-418/d76586da7a5d113ab90578ed56069509
	https://gist.github.com/nat-418/493d40b807132d2643a7058188bff1ca
	https://github.com/anotherhadi/nixy/tree/main
Questions:

Todo:
	1. Data analysis template (with Tmux + Nvim)
		1. Import CSV/JSON/XML/HTML file
		2. Parse file
		3. Normalize/modify data
		4. Organize data
		5. Standard analysis toolsuite scripts
		6. Visualize data
		7. Export data
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/auto_pde/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/auto_pde/notes/</guid>
        <description>&lt;h1 id=&#34;auto_pde&#34;&gt;Auto_Pde
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;p&gt;A completely streamlined product development environment. Starts off with a scaffold for a physical product (general dimensions/specs/requirements) that interoperates with CAD to create scaffolds of parts and assemblies. Updating the CAD updates the scaffold and vise versa.&lt;/p&gt;
&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;p&gt;Enable my solo consultancy plan.&lt;/p&gt;
&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;p&gt;Sit down with someone for an hour on a Friday, go through their product idea, do some sketches and Shapr3D CAD designs, and by Monday have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full product renders, ideally in 3d environments
&lt;ul&gt;
&lt;li&gt;Ideally also with AR or VR integration&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Full 3d parametric CAD files&lt;/li&gt;
&lt;li&gt;Full 2d drawing package for overalls and for each part and subassembly&lt;/li&gt;
&lt;li&gt;Full exports for prototypes:
&lt;ul&gt;
&lt;li&gt;STEP&lt;/li&gt;
&lt;li&gt;DXF&lt;/li&gt;
&lt;li&gt;STL&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Full quote package with preliminary prototype quotes&lt;/li&gt;
&lt;li&gt;Full test package with a list of what configurations are needed of each product for each test.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;p&gt;For each:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read (Get)&lt;/li&gt;
&lt;li&gt;Update/Create (Post)&lt;/li&gt;
&lt;li&gt;Delete&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;onshape-api-connection&#34;&gt;Onshape API connection:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Connect to Onshape API&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;NOTE: use standard onshape-public version, add logging output functionality based of robot example.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Save return output to file&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Compare Onshape item to DB Item&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Update Onshape from DB data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Parse feature (general info) to db&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Add feature position during parse&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Translate featureID &amp;lt;-&amp;gt; ID value
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Flexible conversion function, use for JSON name &amp;lt;-&amp;gt; snake case field conversion as well.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Enum as subclass of the particular OSModel class for conversion? Then reversible function for opposite direction.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Generic function in the main OSModel class that works for parsing from JSON response.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Different generic function that works for parsing from DB to REST JSON structure using the child model&amp;rsquo;s enum class.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Send every API call, save response to file based on call name&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Find some good sample public parts, assemblies, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Script to generate models programmatically using datamodel-codegen&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Save to output folder&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Plan Pydantic code structure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fetch as many responses as possible&lt;/li&gt;
&lt;li&gt;Generate as many models as possible&lt;/li&gt;
&lt;li&gt;Condense models&lt;/li&gt;
&lt;li&gt;Convert OAS to models?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Make pydantic typed api calls + responses&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Error for untyped response:
&lt;ul&gt;
&lt;li&gt;Call datamodel-codegen on response,&lt;/li&gt;
&lt;li&gt;Save to folder for wayward response data&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;api---db-plan&#34;&gt;API -&amp;gt; DB Plan:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Pydantic model for &amp;ldquo;All Items&amp;rdquo;&lt;/li&gt;
&lt;li&gt;SQLmodel models for db table items&lt;/li&gt;
&lt;li&gt;Functionality:
&lt;ul&gt;
&lt;li&gt;Create/Update to&lt;/li&gt;
&lt;li&gt;Read from&lt;/li&gt;
&lt;li&gt;Delete (later)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;general-concept&#34;&gt;General concept:
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;For each table:
&lt;ul&gt;
&lt;li&gt;If no onshape ID, create in Onshape&lt;/li&gt;
&lt;li&gt;Check all instances with Onshape instance and compare values&lt;/li&gt;
&lt;li&gt;Choose which to update:
&lt;ul&gt;
&lt;li&gt;Update Onshape&lt;/li&gt;
&lt;li&gt;Update Local&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Save changes in DB&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;createupdate&#34;&gt;Create/Update:
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If item in DB has OnshapeID:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Update:
&lt;ul&gt;
&lt;li&gt;Read item from, compare, update Onshape if different&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If no ID:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create, then read values and update local&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Get response, parse to Pydantic/SQL  model(s)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For each SQLModel object:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check if exists in DB&lt;/li&gt;
&lt;li&gt;Create if not&lt;/li&gt;
&lt;li&gt;Compare for changes&lt;/li&gt;
&lt;li&gt;Update if different&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cad-automation&#34;&gt;CAD Automation:
&lt;/h2&gt;&lt;h2 id=&#34;pde-scaffolddatabase&#34;&gt;PDE Scaffold/Database:
&lt;/h2&gt;&lt;h3 id=&#34;project-structure&#34;&gt;Project Structure:
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Each project has a config file that pre-loads settings for interacting with both onshape and the database&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project name/ID&lt;/li&gt;
&lt;li&gt;DB filter/visidata views&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each project generates a new workspace(folder?) in Onshape for all project files from that config file&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;quote-automation&#34;&gt;Quote Automation:
&lt;/h2&gt;&lt;h2 id=&#34;rendering-automation&#34;&gt;Rendering Automation
&lt;/h2&gt;&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;log&#34;&gt;Log:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/fantasy_football/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/fantasy_football/notes/</guid>
        <description>&lt;h1 id=&#34;fantasy_football&#34;&gt;Fantasy_Football
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;log&#34;&gt;Log:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/ide/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/ide/notes/</guid>
        <description>&lt;h1 id=&#34;ide&#34;&gt;IDE
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h2 id=&#34;scripting-setup&#34;&gt;Scripting Setup
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Open all -&amp;gt; g2w script&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Close all -&amp;gt; touch-grass&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Scripting menu accessible from the clue.nvim menu&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Change to &amp;ldquo;session based&amp;rdquo; tmux setup:
&lt;ul&gt;
&lt;li&gt;Every project is a session&lt;/li&gt;
&lt;li&gt;Session window templates:
&lt;ul&gt;
&lt;li&gt;Main/Overview:
&lt;ul&gt;
&lt;li&gt;Current setup, but with more standard obsidian note templates for the different categories below.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Code:
&lt;ul&gt;
&lt;li&gt;Better oriented for multi windows,&lt;/li&gt;
&lt;li&gt;Notes are a todo list&lt;/li&gt;
&lt;li&gt;Side pane split vertically vscode style&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Product Design:
&lt;ul&gt;
&lt;li&gt;Autogen folder structure for:
&lt;ul&gt;
&lt;li&gt;Project Overview/Specs/Features&lt;/li&gt;
&lt;li&gt;Project updates/log&lt;/li&gt;
&lt;li&gt;CAD Scaffold&lt;/li&gt;
&lt;li&gt;BOM&lt;/li&gt;
&lt;li&gt;Testing&lt;/li&gt;
&lt;li&gt;3d Exports&lt;/li&gt;
&lt;li&gt;2d Exports&lt;/li&gt;
&lt;li&gt;Quotes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Windows for each of the above&lt;/li&gt;
&lt;li&gt;Panes for visidata&lt;/li&gt;
&lt;li&gt;Links for localhost autogen website pages&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Product families:
&lt;ul&gt;
&lt;li&gt;Pulls in multiple products to one overarching project.&lt;/li&gt;
&lt;li&gt;Rolls up all subdata to give comprehensive view&lt;/li&gt;
&lt;li&gt;Gives easy access to spin up sessions to edit or get more detail on individual products&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;keyboard-shortcuts&#34;&gt;Keyboard Shortcuts
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; tmux/tab/buffer control:
&lt;ul&gt;
&lt;li&gt;leader-tab:
&lt;ul&gt;
&lt;li&gt;open up &amp;ldquo;navigation&amp;rdquo; window&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; caps lock = ctrl&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create keymap for Octo:
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/pwntester/octo.nvim?tab=readme-ov-file#-configuration&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/pwntester/octo.nvim?tab=readme-ov-file#-configuration&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;In git leader? or its own? &amp;ldquo;o&amp;rdquo;?&lt;/li&gt;
&lt;li&gt;Create issue&lt;/li&gt;
&lt;li&gt;Add comment&lt;/li&gt;
&lt;li&gt;Edit comment?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls:
&lt;/h2&gt;&lt;h3 id=&#34;autocomplete&#34;&gt;Autocomplete:
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Change to work more like vscode did
&lt;ul&gt;
&lt;li&gt;Tab for &amp;ldquo;insert&amp;rdquo;&lt;/li&gt;
&lt;li&gt;ctrl vim-keys for navigation?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;misc&#34;&gt;Misc:
&lt;/h2&gt;&lt;h3 id=&#34;learning-neovim&#34;&gt;Learning Neovim:
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Popup window that provides a help menu/cheat sheet.
&lt;ul&gt;
&lt;li&gt;Text Navigation/manipulation&lt;/li&gt;
&lt;li&gt;Standard keyboard Shortcuts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;notes&#34;&gt;Notes:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/llm_agents/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/llm_agents/notes/</guid>
        <description>&lt;h1 id=&#34;llm_agents&#34;&gt;LLM_Agents
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;log&#34;&gt;Log:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/llmedia/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/llmedia/notes/</guid>
        <description>&lt;h1 id=&#34;llmedia&#34;&gt;LLMedia
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;p&gt;An LLM based media operation aiming to provide an easily digestible weekly (daily?) rundown of what people ought to know.&lt;/p&gt;
&lt;p&gt;Make the entire process open and transparent, front to back, to allow input on the design of the system and let it evolve over time.&lt;/p&gt;
&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;p&gt;Aim to provide truth, without disregarding nuance.&lt;/p&gt;
&lt;p&gt;Empower understanding and action:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Why does this matter?
&lt;ul&gt;
&lt;li&gt;To me&lt;/li&gt;
&lt;li&gt;To a community&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What can I do about it?
&lt;ul&gt;
&lt;li&gt;Quick asks&lt;/li&gt;
&lt;li&gt;Deep involvement&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Promote valuable interaction and contribution from the audience.&lt;/p&gt;
&lt;p&gt;Empower the audience to be able to make an impact on the world, ideally starting with their local community.&lt;/p&gt;
&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;LLMs serve as distillation of people&amp;rsquo;s interaction with them, providing:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;research,&lt;/li&gt;
&lt;li&gt;reporting,&lt;/li&gt;
&lt;li&gt;editorial,&lt;/li&gt;
&lt;li&gt;fact checking,&lt;/li&gt;
&lt;li&gt;business related functions of a news organization.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Playwright based web scraper to search and parse websites&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use for job hunt application &amp;ldquo;careers&amp;rdquo; site scraping&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h2 id=&#34;ui&#34;&gt;UI:
&lt;/h2&gt;&lt;p&gt;Code editor ui to play with llm code generation.&lt;/p&gt;
&lt;h3 id=&#34;ui-structure&#34;&gt;UI Structure:
&lt;/h3&gt;&lt;p&gt;Treesitter (AST?) based view of the codebase:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Folder&lt;/li&gt;
&lt;li&gt;File
&lt;ul&gt;
&lt;li&gt;Imports&lt;/li&gt;
&lt;li&gt;Constants&lt;/li&gt;
&lt;li&gt;Classes&lt;/li&gt;
&lt;li&gt;Functions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;functionality&#34;&gt;Functionality:
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Pull code in context, plus all necessary/relevant code&lt;/li&gt;
&lt;li&gt;Store AST code chunks in database
&lt;ul&gt;
&lt;li&gt;Or utilize git history?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Popup window to ask llm api for functionality, with or without code context.&lt;/li&gt;
&lt;li&gt;Create new file or folder&lt;/li&gt;
&lt;li&gt;Edit existing code&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Make an inherited SQLModel class for all data response classes. (or for generic call decorator?)
&lt;ul&gt;
&lt;li&gt;Should be able to store input and output to database, as well as any intermediate steps, time called, ranking score, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;log&#34;&gt;Log:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/miragram/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/miragram/notes/</guid>
        <description>&lt;h1 id=&#34;miragram&#34;&gt;MiraGram
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;p&gt;A library to handle LLM I/O and storing/retrieving from DB via the Mirascope library.&lt;/p&gt;
&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;p&gt;Use in other projects for streamlined LLM calling functionality.&lt;/p&gt;
&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;LLM Call Handling&lt;/li&gt;
&lt;li&gt;LLM Response Handling&lt;/li&gt;
&lt;li&gt;LLM Call Storing&lt;/li&gt;
&lt;li&gt;LLM Response Storing&lt;/li&gt;
&lt;li&gt;LLM Function Handling&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;log&#34;&gt;Log:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/notes_automation/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/notes_automation/notes/</guid>
        <description>&lt;h1 id=&#34;notes_automation&#34;&gt;Notes_Automation
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;p&gt;A streamlined llm-assisted project notes-&amp;gt; website/product page workflow.&lt;/p&gt;
&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;p&gt;Aiming to prevent re-work, by having my freeform thoughts and research notes automatically utilized and cleaned up into a more polished final product and posted to the web as a project portfolio.&lt;/p&gt;
&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Local Obsidian -&amp;gt; Github
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Filewatcher to monitor changes and trigger workflows
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Use Watchdog library&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Have timer to wait for no changes in X seconds before triggering workflow&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Copy notes to repo
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; TODO: Diff between local notes and repo files?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create new commit&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Add Commit Message
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Summarize changes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Github Repo -&amp;gt; GH Pages
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Only post based on frontmatter metadata&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Have &amp;ldquo;working&amp;rdquo; and &amp;ldquo;final&amp;rdquo; draft settings as well&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; GH Pages -&amp;gt; Custom domain&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;log&#34;&gt;Log:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/patent_analysis/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/patent_analysis/notes/</guid>
        <description>&lt;h1 id=&#34;patent-analysis&#34;&gt;Patent Analysis
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;p&gt;A python library to parse and analyze the historical USPTO database.&lt;/p&gt;
&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;p&gt;Use to find interesting patents:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &amp;ldquo;most referenced&amp;rdquo; patent of the day/week that is just coming off patent.&lt;/li&gt;
&lt;li&gt;The least referenced patent of the week&lt;/li&gt;
&lt;li&gt;The most ridiculous patent of the week&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use those to create new &amp;ldquo;inventions&amp;rdquo;/products utilizing those patents.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Need a highly streamlined product development workflow to accomplish. Aim to make this a weekly (and then eventually daily) thing, with full CAD/drawings/BOMs/Website/Social Media presence.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;notes&#34;&gt;Notes:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/python_toolbox/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/python_toolbox/notes/</guid>
        <description>&lt;h1 id=&#34;python_toolbox&#34;&gt;Python_Toolbox
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;notes&#34;&gt;Notes:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/scripting/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/scripting/notes/</guid>
        <description>&lt;h1 id=&#34;scripting&#34;&gt;Scripting
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h2 id=&#34;navigation-scripts&#34;&gt;Navigation scripts
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Can you create a new pane over an existing one from a different directory?
&lt;ul&gt;
&lt;li&gt;Will Neovim call commands on it as if it is in that directory?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h2 id=&#34;environment-updating-scripts&#34;&gt;Environment updating scripts
&lt;/h2&gt;&lt;h3 id=&#34;update-all-nixos-script&#34;&gt;Update all-NixOS Script
&lt;/h3&gt;&lt;h2 id=&#34;devenv-scripts&#34;&gt;Devenv Scripts:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Replace devenv.nix with templated devenv.nix file
&lt;ul&gt;
&lt;li&gt;Programmatically replace template sections
&lt;ul&gt;
&lt;li&gt;CLI app style?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create &amp;ldquo;Programming init&amp;rdquo; script:
&lt;ul&gt;
&lt;li&gt;Create template folders&lt;/li&gt;
&lt;li&gt;Create template files&lt;/li&gt;
&lt;li&gt;import standard toolbox:
&lt;ul&gt;
&lt;li&gt;CLI script library?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Generate Environment Scripts:
&lt;ul&gt;
&lt;li&gt;If a &amp;ldquo;scripts.py&amp;rdquo; file exists:
&lt;ul&gt;
&lt;li&gt;generate a scripts.nix file from it, where each script call in the scripts.py file gets turned into a separate nix script.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;navigation-scripts-1&#34;&gt;Navigation Scripts:
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Open reference file:
&lt;ul&gt;
&lt;li&gt;Create a new Tmux pane over the notes pane
&lt;ul&gt;
&lt;li&gt;Open Telescope to search for file&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Trigger again to switch back to the notes pane sitting behind it.&lt;/li&gt;
&lt;li&gt;Activate from clue.nvim menu?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;boot-startup-script&#34;&gt;Boot Startup Script:
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Open list of files on startup
&lt;ul&gt;
&lt;li&gt;Put it in the tmuxp yaml file as a shell command after opening nvim?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;notes&#34;&gt;Notes:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/telegram_agent/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/telegram_agent/notes/</guid>
        <description>&lt;h1 id=&#34;telegram_agent&#34;&gt;Telegram_Agent
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;log&#34;&gt;Log:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/tui_db/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/tui_db/notes/</guid>
        <description>&lt;h1 id=&#34;tui_db&#34;&gt;TUI_DB
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;log&#34;&gt;Log:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/typeraider/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/typeraider/notes/</guid>
        <description>&lt;h1 id=&#34;typeraider&#34;&gt;Typeraider
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;log&#34;&gt;Log:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Notes</title>
        <link>http://localhost:1313/pages/projects/website/notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/website/notes/</guid>
        <description>&lt;h1 id=&#34;website&#34;&gt;Website
&lt;/h1&gt;&lt;h1 id=&#34;what&#34;&gt;What:
&lt;/h1&gt;&lt;h1 id=&#34;why&#34;&gt;Why:
&lt;/h1&gt;&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;h1 id=&#34;log&#34;&gt;Log:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Obsidian</title>
        <link>http://localhost:1313/pages/projects/nixos_setup/obsidian/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/nixos_setup/obsidian/</guid>
        <description>&lt;h1 id=&#34;what-is-it&#34;&gt;What is it?
&lt;/h1&gt;&lt;p&gt;Linked notes&lt;/p&gt;
&lt;h1 id=&#34;why&#34;&gt;Why?
&lt;/h1&gt;&lt;p&gt;Can be useful to tag things from anywhere&lt;/p&gt;
&lt;h1 id=&#34;how-do-i-want-to-set-it-up&#34;&gt;How do I want to set it up?
&lt;/h1&gt;&lt;p&gt;Multiple folders in different project locations that are symlinks back to a main &amp;ldquo;Notes&amp;rdquo; folder.&lt;/p&gt;
&lt;p&gt;This way all projects have their notes stored locally (useful for projects where the notes will be instructions, or used for a website/blog text) to minimize context switching.&lt;/p&gt;
&lt;h2 id=&#34;layout&#34;&gt;Layout
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Main/Daily folder:
&lt;ul&gt;
&lt;li&gt;Daily notes in a {year}.{WeekNum}.{DayNum}.md file format&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Project Folders:
&lt;ul&gt;
&lt;li&gt;Auto create a daily note if it doesn&amp;rsquo;t exist&lt;/li&gt;
&lt;li&gt;Format of {year}.{WeekNum}.{DayNum}.md
&lt;ul&gt;
&lt;li&gt;subtitle with actual date&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Insert sections:
&lt;ul&gt;
&lt;li&gt;Goals&lt;/li&gt;
&lt;li&gt;Tasks&lt;/li&gt;
&lt;li&gt;Accomplishments
&lt;ul&gt;
&lt;li&gt;All tasks checked off get copied to accomplishments on script run&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Notes
&lt;ul&gt;
&lt;li&gt;General Notes&lt;/li&gt;
&lt;li&gt;Questions&lt;/li&gt;
&lt;li&gt;Reminders&lt;/li&gt;
&lt;li&gt;Learnings&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Projects:
&lt;ul&gt;
&lt;li&gt;Daily notes for each sub project gets copied in under it&amp;rsquo;s own subheader on save&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Programming</title>
        <link>http://localhost:1313/pages/projects/programming/programming/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/programming/programming/</guid>
        <description>&lt;h1 id=&#34;goal&#34;&gt;Goal:
&lt;/h1&gt;&lt;p&gt;Streamlined understanding of how to code. Minimal overhead (only a few languages), maximum effectiveness.&lt;/p&gt;
&lt;h1 id=&#34;languages&#34;&gt;Languages
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/projects/nixos_setup/nix/&#34; &gt;Nix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;python&#34;&gt;#Python
&lt;/h2&gt;&lt;h2 id=&#34;web-development-with-devenv&#34;&gt;Web development with devenv:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/cachix/devenv/tree/main/examples%2Ffly.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/cachix/devenv/tree/main/examples%2Ffly.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Projects</title>
        <link>http://localhost:1313/pages/projects/projects/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/projects/</guid>
        <description>&lt;h1 id=&#34;programmingprojectsprogrammingprogrammingmd&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;Projects/Programming/Programming.md&#34; &gt;Programming&lt;/a&gt;
&lt;/h1&gt;&lt;h2 id=&#34;nixosprojectsnixos_setupnixosmd&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;Projects/NixOS_Setup/NixOS.md&#34; &gt;NixOS&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Goal: Create a unified development environment that I can understand from the bottom up.&lt;/p&gt;
&lt;h3 id=&#34;ideprojectsidenotesmd&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;Projects/IDE/Notes.md&#34; &gt;IDE&lt;/a&gt;
&lt;/h3&gt;&lt;p&gt;Trying to create a personal development environment using &lt;a class=&#34;link&#34; href=&#34;Projects/NixOS_Setup/Neovim.md&#34; &gt;Neovim&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;devenv&#34;&gt;#Devenv
&lt;/h1&gt;&lt;p&gt;Using Devenv.sh to create development environments.&lt;/p&gt;
&lt;h2 id=&#34;shell-scriptingprojectsprogrammingshell20scriptingmd&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;Projects/Programming/Shell%20Scripting.md&#34; &gt;Shell Scripting&lt;/a&gt;
&lt;/h2&gt;&lt;h4 id=&#34;neovimprojectsnixos_setupneovimmd&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;Projects/NixOS_Setup/Neovim.md&#34; &gt;Neovim&lt;/a&gt;
&lt;/h4&gt;&lt;h2 id=&#34;data-analysisdata20analysismd&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;Data%20Analysis.md&#34; &gt;Data Analysis&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Goal: Create a flexible data analysis suite for rapid ingestion and visualization of various kinds of data.
Types of data to work with:
- Business data
- Financial data
- Structured Data
- Patents
- Fantasy Football stats&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Python</title>
        <link>http://localhost:1313/pages/projects/nixos_setup/python/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/nixos_setup/python/</guid>
        <description>&lt;h1 id=&#34;about&#34;&gt;About
&lt;/h1&gt;&lt;p&gt;IDE Setup: &lt;a class=&#34;link&#34; href=&#34;obsidian://open?vault=Notes&amp;amp;file=Neovim&#34; &gt;Python IDE Setup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;#nixos-dev-environments&#34; &gt;#NixOS Dev Environments&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;devenv&#34;&gt;devenv
&lt;/h2&gt;&lt;h3 id=&#34;resources&#34;&gt;Resources:
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://devenv.sh/basics/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://devenv.sh/basics/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=unW1zk8terk&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=unW1zk8terk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://youtu.be/wPp2DJJpCAg?si=iued20K3u6ZAqI1W&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://youtu.be/wPp2DJJpCAg?si=iued20K3u6ZAqI1W&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Web example: &lt;a class=&#34;link&#34; href=&#34;https://github.com/cachix/devenv/tree/main/examples%2Ffly.io&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/cachix/devenv/tree/main/examples%2Ffly.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;notes&#34;&gt;Notes:
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t have spaces in directories (parent or current)
&lt;ul&gt;
&lt;li&gt;Fucks with NixOS
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/cachix/devenv/issues/1307#issuecomment-2202644992&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/cachix/devenv/issues/1307#issuecomment-2202644992&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;thoughts-on-a-structure-for-new-project-creation&#34;&gt;Thoughts on a structure for new project creation:
&lt;/h2&gt;&lt;p&gt;Have a script that generates python devenv folder and structure, and imports standard framework/tooling.&lt;/p&gt;
&lt;h3 id=&#34;standard-setup-script-needs&#34;&gt;Standard Setup (Script needs):
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Create folder&lt;/li&gt;
&lt;li&gt;Create devenv
&lt;ul&gt;
&lt;li&gt;Create env&lt;/li&gt;
&lt;li&gt;Use UV&lt;/li&gt;
&lt;li&gt;Use Ruff&lt;/li&gt;
&lt;li&gt;Use Mypi&lt;/li&gt;
&lt;li&gt;Import standard personal library
&lt;ul&gt;
&lt;li&gt;Data import&lt;/li&gt;
&lt;li&gt;Data Analysis&lt;/li&gt;
&lt;li&gt;File management + manipulation&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Create Git Repo (private)&lt;/li&gt;
&lt;li&gt;Push to repo with standard initial commit&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;standard-devenv-scripts&#34;&gt;Standard devenv scripts:
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Save all and commit
&lt;ul&gt;
&lt;li&gt;With comment&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Push to git repo&lt;/li&gt;
&lt;li&gt;Run Script
&lt;ul&gt;
&lt;li&gt;Different scripts, including standard personal library&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Run app&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;notes-1&#34;&gt;Notes:
&lt;/h2&gt;&lt;h3 id=&#34;to-run-scripts&#34;&gt;To run scripts:
&lt;/h3&gt;&lt;p&gt;Just put a &amp;ldquo;scripts.ScriptName.exec = &amp;ldquo;python path/to/script/file.py&amp;rdquo;&amp;rdquo; in the devenv.nix file&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Random Shit</title>
        <link>http://localhost:1313/pages/random-shit/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/random-shit/</guid>
        <description>&lt;h1 id=&#34;traveling-noteshahahugoshortcode5s0hbhb&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/traveling-notes/&#34; &gt;Traveling Notes&lt;/a&gt;
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Shell Scripting</title>
        <link>http://localhost:1313/pages/projects/programming/shell-scripting/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/programming/shell-scripting/</guid>
        <description>&lt;h1 id=&#34;what-is-it&#34;&gt;What is it?
&lt;/h1&gt;&lt;p&gt;A shell is a program that runs a coding language (called bash) in the terminal. Bash is the same language used at the command line, shell scripting just allows you to chain longer commands together in one go. Multiple shell instances can be run in one terminal, allowing some amount of multitasking/background processing.&lt;/p&gt;
&lt;p&gt;Think of it as more or less the native language the computer talks to itself in, allowing you to speak to it on its own language.&lt;/p&gt;
&lt;h1 id=&#34;why-learn-it&#34;&gt;Why learn it?
&lt;/h1&gt;&lt;p&gt;Super handy to perform general functionality of the computer itself - most (all?) functionality of the GUI is just performing shell scripts under the hood, so why not learn what its actually doing?&lt;/p&gt;
&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Is bash actually the same language as what&amp;rsquo;s being used in the command line?&lt;/li&gt;
&lt;li&gt;Is there a more modular way to import shell scripts into home.nix?
&lt;ol&gt;
&lt;li&gt;Maybe call out to a folder that reads each shell script saved there?&lt;/li&gt;
&lt;li&gt;Or just a single call to a library folder that does the rest?&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Does an imported .sh file need to be made executable first to import a function?
&lt;ol&gt;
&lt;li&gt;Nope. See &amp;ldquo;imported&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;goals&#34;&gt;Goals:
&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Have a personal library of shell scripts (that ideally plays well with NixOS) to make life easier/quicker&lt;/li&gt;
&lt;li&gt;Use to streamline/standardize daily functionality to reduce overhead and make work/life more efficient and effective.&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Figure out how to import from one shell script into another.&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create daily notes file
&lt;ol&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Using the obsidian plugin?&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create &amp;ldquo;Main&amp;rdquo; startup page
&lt;ol&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create list of all project folders via script&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Add list of all projects to main startup page&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Auto-create a daily notes page
&lt;ol&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Choosing project &amp;ldquo;ToDos&amp;rdquo; for the day loads the project in the background in a Tmux buffer&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Autogens the daily note, populates with the ToDo item in question&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;resources&#34;&gt;Resources:
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Chmod&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://en.wikipedia.org/wiki/Chmod&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/192292/how-best-to-include-other-scripts&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/questions/192292/how-best-to-include-other-scripts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/10823635/how-to-include-file-in-a-bash-shell-script&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://stackoverflow.com/questions/10823635/how-to-include-file-in-a-bash-shell-script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;shell-library-outline&#34;&gt;Shell Library Outline:
&lt;/h1&gt;&lt;p&gt;General idea - make it easy to perform various automated tasks. Start with project initialization, add on from there. So, using subheadings as buckets, it&amp;rsquo;ll need:&lt;/p&gt;
&lt;h2 id=&#34;time&#34;&gt;Time:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Date
&lt;ul&gt;
&lt;li&gt;Calendar&lt;/li&gt;
&lt;li&gt;Week number, day number&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Time&lt;/li&gt;
&lt;li&gt;Time elapsed&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;filesdirectories&#34;&gt;Files/Directories:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create directory&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create file&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Get names
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Files&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Directories&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;text&#34;&gt;Text:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Find text&lt;/li&gt;
&lt;li&gt;Compare text&lt;/li&gt;
&lt;li&gt;Insert Text&lt;/li&gt;
&lt;li&gt;Append text&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;scripting&#34;&gt;Scripting
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Add script to NixOS&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Github repo initialization&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Github Project repo initialization&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;notes&#34;&gt;Notes:
&lt;/h1&gt;&lt;p&gt;General notes as things go, not yet organized&lt;/p&gt;
&lt;h2 id=&#34;how-to-make-a-shell-script&#34;&gt;How to make a shell script:
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Write bash code that would work in the command line, save to a &amp;ldquo;.sh&amp;rdquo; file extension&lt;/li&gt;
&lt;li&gt;First line must be &amp;ldquo;#!/bin/bash&amp;rdquo; (if making a script to call by filename, see below for NixOS version)
&lt;ol&gt;
&lt;li&gt;&amp;ldquo;#!&amp;rdquo; means this is executable, the rest just tells shell (remember that its a program, so it needs a hint) that it should run as a bash script&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;in the command line, tell your computer that its executable, not just a regular old file:
&lt;ol&gt;
&lt;li&gt;Run &amp;ldquo;chmod +x filename&amp;rdquo;
&lt;ol&gt;
&lt;li&gt;chmod = change mode&lt;/li&gt;
&lt;li&gt;+x = Add executable mode to the file (so it can be run)&lt;/li&gt;
&lt;li&gt;filename = path to the file just written. (Can also add multiple files at once)&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;how-to-make-a-nixos-shell-script&#34;&gt;How to make a NixOS shell script
&lt;/h2&gt;&lt;p&gt;The above way still works if you want to call something by filename. But, if you want to call it by it&amp;rsquo;s own command shortcut, you need to tell NixOS about it. So:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Same step one as above - write your script&lt;/li&gt;
&lt;li&gt;Add to home.nix as a package:
&lt;ol&gt;
&lt;li&gt;(writeShellScriptBin &amp;ldquo;command-name&amp;rdquo; (builtings.readFile filepath))
&lt;ol&gt;
&lt;li&gt;writeShellScriptBin = NixOS command to take the script and add it to the list of commands that can be run&lt;/li&gt;
&lt;li&gt;command-name = the shortcut you want to be able to call it with&lt;/li&gt;
&lt;li&gt;builtins.readFile = NixOS command to read the script file you just wrote&lt;/li&gt;
&lt;li&gt;filepath = the file you just write&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;importingcalling-shell-scripts&#34;&gt;Importing/calling shell scripts:
&lt;/h2&gt;&lt;p&gt;Important - there are different ways to call a script from another script. One executes it in the current shell environment, the other calls it in a sub-shell. Calling it in a sub-shell means its a clean slate. No access to any variables previously created in the first shell instance. This can be handy to just get a simple result back without having to worry about leftover/overwritten variables.&lt;/p&gt;
&lt;h2 id=&#34;importing-shell-functions&#34;&gt;Importing shell functions:
&lt;/h2&gt;&lt;p&gt;Just import with &amp;ldquo;source filename.sh&amp;rdquo;. Basically treats everything in that other script as though it&amp;rsquo;s lines are inserted at that point.&lt;/p&gt;
&lt;p&gt;Don&amp;rsquo;t need the &amp;ldquo;#! bin/bash&amp;rdquo; for the first line, you can just go with code from the get-go&lt;/p&gt;
&lt;h2 id=&#34;adding-script-to-nixos&#34;&gt;Adding script to NixOS:
&lt;/h2&gt;&lt;p&gt;Attempt 1: Attempted to import scripts from an external nix file as text using builtins.readFile. Failed due to &amp;ldquo;not being a package&amp;rdquo;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A definition for option &amp;rsquo;&amp;rsquo; is not of type &amp;lsquo;package&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Attempt 2: Just write a script that adds text directly to the home.nix file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Strip first chunk&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; For each script in a script directory:
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Copy script to dotfiles script directory&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create script&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;script-date&#34;&gt;Script Date:
&lt;/h2&gt;&lt;p&gt;Built-in day of week and week of year functions exist. Need to confirm how they work around the start of the year?&lt;/p&gt;
&lt;h2 id=&#34;new-project-script&#34;&gt;New Project Script:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create new project folder&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create new Notes folder
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; And Daily notes subfolder&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create note template files:
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Notes:&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; ToDo:&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Daily log&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Initialize dev environment (with git)&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Add to github (private)
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; gh repo create {name} &amp;ndash;private &amp;ndash;source=. &amp;ndash;remote=upstream&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Create&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; &lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Systems</title>
        <link>http://localhost:1313/pages/projects/systems/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/systems/</guid>
        <description>&lt;h1 id=&#34;computing-setup&#34;&gt;Computing Setup
&lt;/h1&gt;&lt;p&gt;Declarative nixOS computing environment, with config files stored in git repository, able to be quickly installed on any system (wsl or linux) for a consistently productive environment.
Bonus points for having something entirely accessible via plain-text interaction so can be accessed via a terminal (or terminal-like) interface from anywhere at any time (personal development server hosted at home or in the cloud?)&lt;/p&gt;
&lt;h2 id=&#34;structure&#34;&gt;Structure
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/projects/nixos_setup/tmux/&#34; &gt;Tmux&lt;/a&gt; + &lt;a class=&#34;link&#34; href=&#34;http://localhost:1313/pages/projects/nixos_setup/neovim/&#34; &gt;Neovim&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Tmux handles organization of multiple neovim panes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Multiple workspaces, one for each project&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Panes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project browsing&lt;/li&gt;
&lt;li&gt;File Browsing&lt;/li&gt;
&lt;li&gt;Notes&lt;/li&gt;
&lt;li&gt;Coding (1 file focus, multiple file focus)&lt;/li&gt;
&lt;li&gt;Coding Output (again, single or multiple output, data, data viz, web, photo, video?)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Keyboard shortcuts and scripts for rapid navigation and iteration&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modular (i.e. - git operations, automatically done for each project&amp;rsquo;s repository)&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Tmux</title>
        <link>http://localhost:1313/pages/projects/nixos_setup/tmux/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/nixos_setup/tmux/</guid>
        <description>&lt;p&gt;#Programming&lt;/p&gt;
&lt;h1 id=&#34;what-is-it&#34;&gt;What is it?
&lt;/h1&gt;&lt;p&gt;A window switcher? Need to investigate and determine where/how this overlaps with the desktop itself.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Learned a lot since.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Terminal Multiplexer&amp;rdquo;
&lt;ul&gt;
&lt;li&gt;AKA - Multiple terminals, able to let them hang out in the background, call them back when needed&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;my-questions&#34;&gt;My Questions:
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;If I have two windows with shared panes, does each pane count twice memory/processor wise?
&lt;ul&gt;
&lt;li&gt;/Is it possible to actually &amp;ldquo;share&amp;rdquo; panes?&lt;/li&gt;
&lt;li&gt;Could be useful for mimic-ing having pane &amp;ldquo;stacks&amp;rdquo; - sidebar that switches between file explorer and notes, for example.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Is it possible for a pane to resize when it is the main focus?
&lt;ul&gt;
&lt;li&gt;Or change border/outline/etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What controls the spacebar menu? Which-key? Telescope?&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;why&#34;&gt;Why?
&lt;/h1&gt;&lt;p&gt;Really useful when SSH-ing into another server/computer. Can also script it to auto spin things up when you initially start up so things are ready.&lt;/p&gt;
&lt;p&gt;Can also have multiple things happen simultaneously: Run tests, examine output while you flip through the main code, call up another test run and compare output 1 vs output 2.&lt;/p&gt;
&lt;p&gt;Also great in case scripts/programs crash, you dont kill Neovim (for example).&lt;/p&gt;
&lt;h1 id=&#34;how-does-it-workhow-do-i-want-to-think-about-it&#34;&gt;How does it work/How do I want to think about it?
&lt;/h1&gt;&lt;h2 id=&#34;panes&#34;&gt;Panes:
&lt;/h2&gt;&lt;p&gt;One independent running shell instance&lt;/p&gt;
&lt;h2 id=&#34;windows&#34;&gt;Windows:
&lt;/h2&gt;&lt;p&gt;A collection of one or more panes.&lt;/p&gt;
&lt;h2 id=&#34;sessions&#34;&gt;Sessions:
&lt;/h2&gt;&lt;p&gt;The overarching &amp;ldquo;group&amp;rdquo; of windows.&lt;/p&gt;
&lt;h1 id=&#34;how-do-i-want-to-set-it-up&#34;&gt;How do I want to set it up?
&lt;/h1&gt;&lt;h2 id=&#34;goal&#34;&gt;Goal:
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Minimize impact from context switching&lt;/li&gt;
&lt;li&gt;Quickly scaffold new projects&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;concept&#34;&gt;Concept:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Common layout for smoother context switching&lt;/li&gt;
&lt;li&gt;Minimize distractions to focus on task at hand&lt;/li&gt;
&lt;li&gt;Easy reference to tasks and overarching goals&lt;/li&gt;
&lt;li&gt;Easy &amp;ldquo;flags&amp;rdquo; to recognize what is accessible from current view without distraction&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;layout&#34;&gt;Layout:
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Sidebar:
&lt;ul&gt;
&lt;li&gt;Top:
&lt;ul&gt;
&lt;li&gt;Goals&lt;/li&gt;
&lt;li&gt;Tasks&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bottom:
&lt;ul&gt;
&lt;li&gt;Notes
&lt;ul&gt;
&lt;li&gt;Expands when its the focus?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Main pane:
&lt;ul&gt;
&lt;li&gt;Top:
&lt;ul&gt;
&lt;li&gt;Currently focused document/task/file&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bottom:
&lt;ul&gt;
&lt;li&gt;Terminal
&lt;ul&gt;
&lt;li&gt;Tagged to current project&amp;rsquo;s root&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/auto_pde/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/auto_pde/tasks/</guid>
        <description>&lt;h1 id=&#34;auto_pde_tasks&#34;&gt;Auto_Pde_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/fantasy_football/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/fantasy_football/tasks/</guid>
        <description>&lt;h1 id=&#34;fantasy_football_tasks&#34;&gt;Fantasy_Football_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/ide/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/ide/tasks/</guid>
        <description>&lt;h1 id=&#34;ide_tasks&#34;&gt;IDE_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/llm_agents/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/llm_agents/tasks/</guid>
        <description>&lt;h1 id=&#34;llm_agents_tasks&#34;&gt;LLM_Agents_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/llmedia/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/llmedia/tasks/</guid>
        <description>&lt;h1 id=&#34;llmedia_tasks&#34;&gt;LLMedia_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/miragram/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/miragram/tasks/</guid>
        <description>&lt;h1 id=&#34;miragram_tasks&#34;&gt;MiraGram_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/notes_automation/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/notes_automation/tasks/</guid>
        <description>&lt;h1 id=&#34;notes_automation_tasks&#34;&gt;Notes_Automation_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/patent_analysis/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/patent_analysis/tasks/</guid>
        <description>&lt;h1 id=&#34;tasks&#34;&gt;Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks-1&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/python_toolbox/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/python_toolbox/tasks/</guid>
        <description>&lt;h1 id=&#34;python_toolbox_tasks&#34;&gt;Python_Toolbox_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/scripting/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/scripting/tasks/</guid>
        <description>&lt;h1 id=&#34;scripting_tasks&#34;&gt;Scripting_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Update IDE Update script for new location&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/telegram_agent/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/telegram_agent/tasks/</guid>
        <description>&lt;h1 id=&#34;telegram_agent_tasks&#34;&gt;Telegram_Agent_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/tui_db/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/tui_db/tasks/</guid>
        <description>&lt;h1 id=&#34;tui_db_tasks&#34;&gt;TUI_DB_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/typeraider/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/typeraider/tasks/</guid>
        <description>&lt;h1 id=&#34;typeraider_tasks&#34;&gt;Typeraider_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>ToDo</title>
        <link>http://localhost:1313/pages/projects/website/tasks/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/projects/website/tasks/</guid>
        <description>&lt;h1 id=&#34;website_tasks&#34;&gt;Website_Tasks
&lt;/h1&gt;&lt;h1 id=&#34;outline&#34;&gt;Outline:
&lt;/h1&gt;&lt;h1 id=&#34;tasks&#34;&gt;Tasks:
&lt;/h1&gt;</description>
        </item>
        <item>
        <title>Traveling Notes</title>
        <link>http://localhost:1313/pages/traveling-notes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>http://localhost:1313/pages/traveling-notes/</guid>
        <description>&lt;h1 id=&#34;travel&#34;&gt;Travel:
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Lyft Driver Podcast - Whats in your dirt?
Genealogy podcast&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
